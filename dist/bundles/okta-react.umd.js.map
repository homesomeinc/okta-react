{"version":3,"file":"okta-react.umd.js","sources":["../../src/OktaContext.ts","../../src/OktaError.tsx","../../src/LoginCallback.tsx","../../src/SecureRoute.tsx","../../src/Security.tsx","../../src/withOktaAuth.tsx"],"sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState | null;\n    _onAuthRequired?: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext) as IOktaContext;\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\ninterface LoginCallbackProps {\n  errorComponent?: React.ComponentType<{ error: Error }>;\n  onAuthResume?: OnAuthResumeFunction;\n  loadingElement?: React.ReactElement;\n}\n\nconst LoginCallback: React.FC<LoginCallbackProps> = ({ errorComponent, loadingElement = null, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    if (onAuthResume && oktaAuth.isInteractionRequired?.() ) {\n      onAuthResume();\n      return;\n    }\n    oktaAuth.handleLoginRedirect().then(() => {\n      // In `<Security>` component service was not started in case of login redirect.\n      // Start it now after `restoreOriginalUri` has been called and route changed.\n      oktaAuth.start();\n    }).catch(e => {\n      setCallbackError(e);\n    });\n  }, [oktaAuth]);\n\n  const authError = authState?.error;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return loadingElement;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport { Route, useRouteMatch, RouteProps } from 'react-router-dom';\nimport { toRelativeUrl } from '@okta/okta-auth-js';\nimport OktaError from './OktaError';\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n  errorComponent?: React.ComponentType<{ error: Error }>;\n} & RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired,\n  errorComponent,\n  ...routeProps \n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useRouteMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n  const [handleLoginError, setHandleLoginError] = React.useState<Error | null>(null);\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      const originalUri = toRelativeUrl(window.location.href, window.location.origin);\n      oktaAuth.setOriginalUri(originalUri);\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated) { \n      handleLogin().catch(err => {\n        setHandleLoginError(err as Error);\n      });\n    }  \n\n  }, [\n    authState,\n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (handleLoginError) {\n    return <ErrorReporter error={handleLoginError} />;\n  }\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, AuthState, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return null;\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n  const [oktaAuthMajorVersion] = React.useState(() => {\n    if (!oktaAuth || !oktaAuth._oktaUserAgent) {\n      return null;\n    }\n\n    const oktaAuthVersion = oktaAuth._oktaUserAgent.getVersion();\n    const majorVersion = oktaAuthVersion?.split('.')[0];\n    return majorVersion;\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    oktaAuth.options.restoreOriginalUri = async (oktaAuth: unknown, originalUri: string) => {\n      restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    };\n\n    // Add okta-react userAgent\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(`${process.env.PACKAGE_NAME}/${process.env.PACKAGE_VERSION}`);\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    // Update Security provider with latest authState\n    const handler = (authState: AuthState) => {\n      setAuthState(authState);\n    };\n    oktaAuth.authStateManager.subscribe(handler);\n\n    // Trigger an initial change event to make sure authState is latest\n    oktaAuth.start();\n\n    return () => {\n      oktaAuth.authStateManager.unsubscribe(handler);\n      oktaAuth.stop();\n    };\n  }, [oktaAuth, restoreOriginalUri]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (oktaAuthMajorVersion !== process.env.AUTH_JS_MAJOR_VERSION \n      // use SKIP_VERSION_CHECK flag to control version check in tests\n      && process.env.SKIP_VERSION_CHECK !== '1') {\n    const err = new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, okta-auth-js version ${process.env.AUTH_JS_MAJOR_VERSION}.x is the current supported version.`);\n    return <OktaError error={err} />;\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props: Omit<P, keyof IOktaContext>) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n"],"names":["OktaContext","React","createContext","useOktaAuth","useContext","OktaError","error","name","message","toString","errorComponent","loadingElement","onAuthResume","oktaAuth","authState","useState","callbackError","setCallbackError","ErrorReporter","useEffect","isInteractionRequired","handleLoginRedirect","then","start","e","authError","displayError","onAuthRequired","routeProps","_onAuthRequired","match","useRouteMatch","pendingLogin","useRef","handleLoginError","setHandleLoginError","handleLogin","current","originalUri","toRelativeUrl","window","location","href","origin","setOriginalUri","onAuthRequiredFn","signInWithRedirect","isAuthenticated","err","Route","restoreOriginalUri","children","authStateManager","getAuthState","setAuthState","oktaAuthMajorVersion","_oktaUserAgent","oktaAuthVersion","getVersion","split","options","console","warn","addEnvironment","handler","subscribe","unsubscribe","stop","AuthSdkError","process","env","SKIP_VERSION_CHECK","Provider","value","ComponentToWrap","WrappedComponent","props","oktaAuthProps","displayName"],"mappings":"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"}